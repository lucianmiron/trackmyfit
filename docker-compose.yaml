services:
  activities:
    build:
      context: .
      dockerfile: ./apps/activities/Dockerfile
      target: development
    command: pnpm run start:dev activities
    develop:
      watch:
        - action: sync
          path: ./apps/activities
          target: /usr/src/app/apps/activities
          ignore:
            - node_modules/
    env_file:
      - ./apps/activities/.env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - /usr/src/app/node_modules
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
